{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","value","setValue","onSubmit","e","preventDefault","trim","length","categories","type","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","fetchData","useFetchGifs","img","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EACtBC,mBAAS,IADa,mBACzCC,EADyC,KAClCC,EADkC,KAWhD,OACI,sBAAMC,SATW,SAAAC,GACjBA,EAAEC,iBACGJ,EAAMK,OAAOC,OAAS,IACvBR,GAAe,SAAAS,GAAU,OAAOP,GAAP,mBAAiBO,OAC1CN,EAAS,MAKb,SACI,uBACIO,KAAK,OACLR,MAAOA,EACPS,SAdc,SAAAN,GAAC,OAAIF,EAASE,EAAEO,OAAOV,a,+BCFxCW,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAK,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,OAAd,MAA4B,CAC/CF,KACAC,QACAT,IAAG,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBX,QAPf,kBASZM,GATY,4CAAH,sDCQLM,EATK,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOT,EAAW,EAAXA,IAC/B,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAMd,EAAMe,IAAMN,IACvB,4BAAIA,QCgBDO,EAlBC,SAAC,GAAoB,IAAjBlB,EAAgB,EAAhBA,SAAgB,ECDR,SAAAA,GAAa,IAAD,EAEVb,mBAAS,CAC/BoB,KAAM,GACNY,SAAS,IAJuB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAkBpC,OAXAC,qBAAY,YACO,uCAAG,4BAAArB,EAAA,sEACKF,EAASC,GADd,OACRO,EADQ,OAEdc,EAAS,CACLd,OACAY,SAAS,IAJC,2CAAH,oDAOfI,KACF,CAAEvB,IAEGoB,EDf0BI,CAAcxB,GAAlCY,EAFmB,EAExBL,KAAaY,EAFW,EAEXA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDf,IACnD,sBAAKe,UAAU,YAAf,UACMI,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZH,EAAOH,KAAK,SAAAgB,GAAG,OACR,cAAC,EAAD,eAAiCA,GAAdA,EAAIf,cETlCgB,EAAe,WAAO,IAAD,EACMvC,mBAAS,CAAC,gBADhB,mBACvBQ,EADuB,KACXT,EADW,KAG9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BACKS,EAAWc,KAAK,SAACT,GAAD,OACb,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCb7B2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d30f9610.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ( { setCategories } ) => {\n    const [value, setValue] = useState('');\n    const handleInputChange = e => setValue(e.target.value);\n    const handleSubmit = e => {\n        e.preventDefault();\n        if ( value.trim().length > 2 ){\n            setCategories( categories => ([ value, ...categories ]));\n            setValue('');\n        }\n        \n    };\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={value}\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\n\nexport const getGifs = async ( category, ) =>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=9ORBq185AbqPOQRJNTYmevYV3tyEQwmt`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n    const gifs = data.map( ({ id, title, images }) => ({\n        id,\n        title,\n        url: images?.downsized_medium.url\n    }));\n    return gifs;\n}","import React from 'react'\n\nconst GifGridItem = ( { id, title, url } ) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p>{title}</p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ( { category } ) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n    \n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>            \n            <div className=\"card-grid\">\n                { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n                \n                {images.map( img => (\n                        <GifGridItem key={ img.id } { ...img } />\n                    ))}\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = category => {    \n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });   \n\n    useEffect(  () => {\n        const fetchData = async () =>{\n            const data = await getGifs( category );\n            setState({\n                data,\n                loading: false\n            });\n        }\n        fetchData();\n    },[ category ]);\n\n    return state;\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\n//const categories = ['One Punch','Samurai X','Dragon Ball'];\n\nexport const GifExpertApp = () => {\n    const [categories, setCategories] = useState(['Dragon Ball']);\n    \n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr />\n            {/* <button onClick={handleAdd}>Agregar</button> */}\n            <ol>\n                {categories.map( (category) => (\n                    <GifGrid \n                        key={category}\n                        category={category}\n                    />\n                    \n                ) )}\n            </ol>\n\n        </>   \n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}